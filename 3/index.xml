<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>3-rsses on Решения задач с курса School Depth 2016/2017г.</title>
    <link>https://egormatirov.github.io/School_Depth/3/index.xml</link>
    <description>Recent content in 3-rsses on Решения задач с курса School Depth 2016/2017г.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 07 Nov 2016 19:40:27 +0400</lastBuildDate>
    <atom:link href="https://egormatirov.github.io/School_Depth/3/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>A</title>
      <link>https://egormatirov.github.io/School_Depth/3/A/</link>
      <pubDate>Mon, 07 Nov 2016 19:40:27 +0400</pubDate>
      
      <guid>https://egormatirov.github.io/School_Depth/3/A/</guid>
      <description>&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;
// Иначе студия ругается на scanf \ printf
#pragma warning(disable:4996)
void d__(int n)
{
    if (n != 1)
    {
        for (int k = 2; k &amp;lt;= n / 2; ++k)
        {
            if (n % k == 0)
            {
                printf(&amp;quot;%d * &amp;quot;, k);
                d__(n / k);
                return;
            }
        }
    }
    printf(&amp;quot;%d&amp;quot;, n);
}


int main()
{
    int n;
    scanf(&amp;quot;%d&amp;quot;, &amp;amp;n);
    printf(&amp;quot;%d = &amp;quot;, n);
    d__(n);
    printf(&amp;quot;\n\n&amp;quot;);
    return 0;
}&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>B</title>
      <link>https://egormatirov.github.io/School_Depth/3/B/</link>
      <pubDate>Mon, 07 Nov 2016 19:40:27 +0400</pubDate>
      
      <guid>https://egormatirov.github.io/School_Depth/3/B/</guid>
      <description>&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;
// Иначе студия ругается на scanf \ printf
#pragma warning(disable:4996)
void d__(int n)
{
    if (n != 1)
    {
        for (int k = 2; k &amp;lt;= n / 2; ++k)
        {
            if (n % k == 0)
            {
                d__(n / k);
                printf(&amp;quot; * %d&amp;quot;, k);
                return;
            }
        }
    }
    printf(&amp;quot;%d&amp;quot;, n);
}


int main()
{
    int n;
    scanf(&amp;quot;%d&amp;quot;, &amp;amp;n);
    printf(&amp;quot;%d = &amp;quot;, n);
    d__(n);
    return 0;
}&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>C</title>
      <link>https://egormatirov.github.io/School_Depth/3/C/</link>
      <pubDate>Mon, 07 Nov 2016 19:40:27 +0400</pubDate>
      
      <guid>https://egormatirov.github.io/School_Depth/3/C/</guid>
      <description>&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;
// Иначе студия ругается на scanf \ printf
#pragma warning(disable:4996)
void d__(int n)
{
    if (n != 1)
    {
        for (int k = 2; k &amp;lt;= n / 2; ++k)
        {
            if (n % k == 0)
            {
                printf(&amp;quot;%d * &amp;quot;, k);
                d__(n / k);
                return;
            }
        }
    }
    printf(&amp;quot;%d&amp;quot;, n);
}

int main()
{
    int n;
    scanf(&amp;quot;%d&amp;quot;, &amp;amp;n);
    d__(n);
    printf(&amp;quot; = %d&amp;quot;, n);
    return 0;
}&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>D</title>
      <link>https://egormatirov.github.io/School_Depth/3/D/</link>
      <pubDate>Mon, 07 Nov 2016 19:40:27 +0400</pubDate>
      
      <guid>https://egormatirov.github.io/School_Depth/3/D/</guid>
      <description>&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;
// Иначе студия ругается на scanf \ printf
#pragma warning(disable:4996)
void d__(int n)
{
    if (n != 1)
    {
        for (int k = 2; k &amp;lt;= n / 2; ++k)
        {
            if (n % k == 0)
            {
                d__(n / k);
                printf(&amp;quot; * %d&amp;quot;, k);
                return;
            }
        }
    }
    printf(&amp;quot;%d&amp;quot;, n);
}

int main()
{
    int n;
    scanf(&amp;quot;%d&amp;quot;, &amp;amp;n);
    d__(n);
    printf(&amp;quot; = %d&amp;quot;, n);
    return 0;
}&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>E</title>
      <link>https://egormatirov.github.io/School_Depth/3/E/</link>
      <pubDate>Mon, 07 Nov 2016 19:40:27 +0400</pubDate>
      
      <guid>https://egormatirov.github.io/School_Depth/3/E/</guid>
      <description>&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;

int a[50], n, l, d, z;
int r[50];

void printprogr()
{
    printf(&amp;quot;%d&amp;quot;, r[0]);
    for (int i = 1; i&amp;lt;l; ++i)
    {
        printf(&amp;quot; %d&amp;quot;, r[i]);
    }
    printf(&amp;quot;\n&amp;quot;);
}

void progr(int ni, int nr)
{
    if (nr &amp;gt;= l)
    {
        printprogr();
        z = 1;
        return;
    }
    for (int i = ni; i&amp;lt;n; ++i)
    {
        if (r[nr - 1] + d == a[i])
        {
            r[nr] = a[i];
            progr(i + 1, nr + 1);
        }
    }
}

int main()
{
    scanf(&amp;quot;%d %d %d \n&amp;quot;, &amp;amp;n, &amp;amp;l, &amp;amp;d);
    for (int i = 0; i&amp;lt;n; ++i)
        scanf(&amp;quot;%d &amp;quot;, &amp;amp;a[i]);
    for (int i = 0; i&amp;lt;n; ++i)
    {
        r[0] = a[i];
        progr(i + 1, 1);
    }
    if (z == 0) printf(&amp;quot;no&amp;quot;);
}&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>F</title>
      <link>https://egormatirov.github.io/School_Depth/3/F/</link>
      <pubDate>Mon, 07 Nov 2016 19:40:27 +0400</pubDate>
      
      <guid>https://egormatirov.github.io/School_Depth/3/F/</guid>
      <description>&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;vector&amp;gt;
#include &amp;lt;algorithm&amp;gt;
#include &amp;lt;string&amp;gt;
using namespace std;
// Иначе студия ругается на scanf \ printf
#pragma warning(disable:4996)

int a[28], b[28], ra[28], rb[28], used[28], n, l, d;

// для хранения ответов.
// По сути, это &amp;quot;массив&amp;quot; с изменяемой длиной.
vector&amp;lt;string&amp;gt; answers;

void add_answer()
{
    string answer = &amp;quot;&amp;quot;;
    for (int i = 0; i&amp;lt;l; ++i)
    {
        // добавляем строчку вида &amp;quot;n m\n&amp;quot;,
        // где n и m - числа на сторонах доминошки.
        answer += to_string(ra[i]) + &amp;quot; &amp;quot; + to_string(rb[i]) + &amp;quot;\n&amp;quot;;
    }
    answer += &amp;quot;\n&amp;quot;;

    // добавляем текущий ответ в список ответов.
    answers.push_back(answer);
}

void progr(int prev_sum, int nr, int last_num)
{
    if (nr &amp;gt;= l)
    {
        // Если собрали l доминошек, то добавляем ответ.
        add_answer();
        return;
    }

    for (int i = 0; i&amp;lt;n; ++i)
    {
        // Если мы не использовали эту доминошку и
        // сумма чисел на ней нам подходит и
        // хотя бы одно из чисел совпадает с тем, что стоит в конце
        if (!used[i] &amp;amp;&amp;amp;
            prev_sum + d == a[i] + b[i] &amp;amp;&amp;amp;
            (a[i] == last_num || b[i] == last_num))
        {
            // то пытаемся использовать эту доминошку.
            used[i] = true;
            int first = a[i], last = b[i];

            // если нам нужно перевернуть доминошку, то переворачиваем.
            if (a[i] != last_num)
                swap(first, last);

            // ставим на nr место доминошку и пробуем подобрать след.
            ra[nr] = first;
            rb[nr] = last;
            progr(a[i] + b[i], nr + 1, last);

            used[i] = false;
        }
    }
}

int main() 
{
    scanf(&amp;quot;%d %d %d\n&amp;quot;, &amp;amp;d, &amp;amp;l, &amp;amp;n);
    for (int i = 0; i&amp;lt;n; ++i)
        scanf(&amp;quot;%d %d&amp;quot;, &amp;amp;a[i], &amp;amp;b[i]);

    for (int i = 0; i&amp;lt;n; ++i)
    {
        // Помечаем текующую доминошку, как использованную
        // Чтобы случайно не использовать её повторно.
        used[i] = true;

        // Пробуем положить на первое место неперевернутую доминошку.
        ra[0] = a[i];
        rb[0] = b[i];
        progr(a[i] + b[i], 1, b[i]);

        if(a[i] != b[i])
        {
            // Если числа на сторонах доминошки разные,
            // То пробуем положить на первое место перевернутую доминошку.
            ra[0] = b[i];
            rb[0] = a[i];
            progr(a[i] + b[i], 1, a[i]);
        }

        // Убираем отметку об использовании доминошки
        // Т.к. на столе сейчас пусто и эту доминошку
        // Мы можем использовать позже.
        used[i] = false;
    }

    // Сортируем ответы и выводим.
    sort(answers.begin(), answers.end());
    for(int i = 0; i&amp;lt;answers.size(); ++i)
    {
        printf(&amp;quot;%s&amp;quot;, answers[i].c_str());
    }
}


&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>